name: "Check distrox"

on:
  push:
    branches: [master, staging, trying]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-flake:
    name: check-flake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: distrox
          # If you chose API tokens for write access OR if you have a private cache
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix --extra-experimental-features "nix-command flakes" flake check

  # We need some "accummulation" job here because bors fails (timeouts) to
  # listen on matrix builds.
  # Hence, we have some kind of dummy here that bors can listen on
  ci-success:
    name: CI
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs:
      - check-flake
    steps:
      - name: CI succeeded
        run: exit 0

